name: Run Native TS Server and deploy to pages with reverse proxy ip

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write
  
  # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
  # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
  run-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js v23.x
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Expose Port 3000 with ngrok
        run: |
            ngrok http 3000 > /dev/null &
            sleep 5
            NGROK_URL=$(curl --silent --fail http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            mkdir -p ./docs
            echo "{\"url\":\"$NGROK_URL\"}" > ./docs/ngrok-url.json
            echo "$NGROK_URL"

          
      - name: Start TypeScript Server
        run: |
          node server.ts &
          sleep 5
          curl --fail http://localhost:3000/hello || (echo "Server did not start" && exit 1) &
          sleep 200


