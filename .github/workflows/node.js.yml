name: Run Native TS Server and deploy to pages with reverse proxy ip
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js v23.x
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'
      
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
      
      - name: Expose Port 3000 with ngrok
        run: |
          ngrok http 3000 > /dev/null &
          sleep 5
          NGROK_URL=$(curl --silent --fail http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          mkdir -p ./docs
          echo "export default {\"url\":\"$NGROK_URL\"}" > ./docs/ngrok-url.js
          echo "$NGROK_URL"
      
      - name: Start TypeScript Server
        run: |
          node server.ts &
          sleep 5
          curl --fail http://localhost:3000/hello || (echo "Server did not start" && exit 1) &

      
      # GitHub Pages deployment steps
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'  # Upload the docs directory containing static files
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: PAUSE
        run: sleep 200